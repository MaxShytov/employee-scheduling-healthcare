# Generated by Django 5.0.10 on 2025-10-10 00:20

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="position title"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Short code for the position (e.g., RN, MD, PA)",
                        max_length=20,
                        unique=True,
                        verbose_name="position code",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "requires_certification",
                    models.BooleanField(
                        default=False,
                        help_text="Does this position require medical certification?",
                        verbose_name="requires certification",
                    ),
                ),
                (
                    "min_hourly_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Minimum hourly rate in Swiss Francs",
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="minimum hourly rate (CHF)",
                    ),
                ),
                (
                    "max_hourly_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Maximum hourly rate in Swiss Francs",
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="maximum hourly rate (CHF)",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
            ],
            options={
                "verbose_name": "position",
                "verbose_name_plural": "positions",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="department name"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Short code for the department (e.g., ER, ICU, CARD)",
                        max_length=20,
                        unique=True,
                        verbose_name="department code",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_departments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="department manager",
                    ),
                ),
            ],
            options={
                "verbose_name": "department",
                "verbose_name_plural": "departments",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(
                        help_text="Unique employee identification number",
                        max_length=20,
                        unique=True,
                        verbose_name="employee ID",
                    ),
                ),
                (
                    "employment_type",
                    models.CharField(
                        choices=[
                            ("FT", "Full-time"),
                            ("PT", "Part-time"),
                            ("CT", "Contract"),
                            ("TM", "Temporary"),
                            ("IN", "Intern"),
                        ],
                        default="FT",
                        max_length=2,
                        verbose_name="employment type",
                    ),
                ),
                (
                    "hire_date",
                    models.DateField(
                        help_text="Date when employee was hired",
                        verbose_name="hire date",
                    ),
                ),
                (
                    "termination_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when employment ended",
                        null=True,
                        verbose_name="termination date",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Is this employee currently active?",
                        verbose_name="is active",
                    ),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Hourly wage rate in Swiss Francs",
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="hourly rate (CHF)",
                    ),
                ),
                (
                    "weekly_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("42.00"),
                        help_text="Expected weekly working hours",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01")),
                            django.core.validators.MaxValueValidator(Decimal("168.00")),
                        ],
                        verbose_name="weekly hours",
                    ),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="emergency contact name",
                    ),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        verbose_name="emergency contact phone",
                    ),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(
                        blank=True,
                        help_text="Relationship to employee (spouse, parent, etc.)",
                        max_length=50,
                        verbose_name="relationship",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal notes about the employee",
                        verbose_name="notes",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="employees",
                        to="employees.department",
                        verbose_name="department",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user account",
                    ),
                ),
                (
                    "position",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="employees",
                        to="employees.position",
                        verbose_name="position",
                    ),
                ),
            ],
            options={
                "verbose_name": "employee",
                "verbose_name_plural": "employees",
                "ordering": ["-hire_date", "user__last_name", "user__first_name"],
            },
        ),
        migrations.CreateModel(
            name="EmployeeDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("contract", "Employment Contract"),
                            ("certificate", "Certification"),
                            ("license", "License"),
                            ("resume", "Resume/CV"),
                            ("reference", "Reference Letter"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="document type",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                (
                    "file",
                    models.FileField(
                        help_text="Upload document (PDF, DOCX, JPG, PNG)",
                        upload_to="employee_documents/%Y/%m/",
                        verbose_name="file",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "issue_date",
                    models.DateField(blank=True, null=True, verbose_name="issue date"),
                ),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True,
                        help_text="When does this document expire?",
                        null=True,
                        verbose_name="expiry date",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="employees.employee",
                        verbose_name="employee",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_documents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="uploaded by",
                    ),
                ),
            ],
            options={
                "verbose_name": "employee document",
                "verbose_name_plural": "employee documents",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(
                fields=["employee_id"], name="employees_e_employe_514cc5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(
                fields=["department", "is_active"],
                name="employees_e_departm_fa1d35_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(
                fields=["position", "is_active"], name="employees_e_positio_de0220_idx"
            ),
        ),
    ]
