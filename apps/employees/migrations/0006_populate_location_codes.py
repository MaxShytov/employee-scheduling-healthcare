# Generated by Django 5.0.10 on 2025-10-25 14:10

from django.db import migrations


def populate_location_codes(apps, schema_editor):
    """Generate unique codes for existing locations based on city name."""
    Location = apps.get_model('employees', 'Location')

    for location in Location.objects.all():
        # Generate code from first 3 letters of city name in uppercase
        base_code = location.city[:3].upper() if location.city else 'LOC'

        # Ensure uniqueness by adding number suffix if needed
        code = base_code
        counter = 1
        while Location.objects.filter(code=code).exists():
            code = f"{base_code}{counter}"
            counter += 1

        location.code = code
        location.save()


def reverse_populate(apps, schema_editor):
    """Set all codes to empty string."""
    Location = apps.get_model('employees', 'Location')
    Location.objects.all().update(code='')


class Migration(migrations.Migration):
    dependencies = [
        ("employees", "0005_add_location_code_no_unique"),
    ]

    operations = [
        migrations.RunPython(populate_location_codes, reverse_populate),
    ]
